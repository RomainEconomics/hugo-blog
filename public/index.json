
[{"content":"This blog serves as a platform for me to document my journey and share insights. It\u0026rsquo;s a space for reflection, learning, and connecting with others who have similar interests.\nFeel free to reach out to me directly by email or message with any questions or interesting opportunities!\n","date":"16 April 2024","externalUrl":null,"permalink":"/","section":"","summary":"This blog serves as a platform for me to document my journey and share insights.","title":"","type":"page"},{"content":" Some title # Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS.\nBy default, Tailwind removes all of the default browser styling from paragraphs, headings, lists and more. This ends up being really useful for building application UIs because you spend less time undoing user-agent styles, but when you really are just trying to style some content that came from a rich-text editor in a CMS or a markdown file, it can be surprising and unintuitive.\nWe get lots of complaints about it actually, with people regularly asking us things like:\nWhy is Tailwind removing the default styles on my h1 elements? How do I disable this? What do you mean I lose all the other base styles too? We hear you, but we\u0026rsquo;re not convinced that simply disabling our base styles is what you really want. You don\u0026rsquo;t want to have to remove annoying margins every time you use a p element in a piece of your dashboard UI. And I doubt you really want your blog posts to use the user-agent styles either — you want them to look awesome, not awful.\nThe @tailwindcss/typography plugin is our attempt to give you what you actually want, without any of the downsides of doing something stupid like disabling our base styles.\nIt adds a new prose class that you can slap on any block of vanilla HTML content and turn it into a beautiful, well-formatted document:\n\u0026lt;article class=\u0026#34;prose\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Garlic bread with cheese: What the science tells us\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; For years parents have espoused the health benefits of eating garlic bread with cheese to their children, with the food earning such an iconic status in our culture that kids will often dress up as warm, cheesy loaf for Halloween. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases springing up around the country. \u0026lt;/p\u0026gt; \u0026lt;/article\u0026gt; For more information about how to use the plugin and the features it includes, read the documentation.\nWhat to expect from here on out # What follows from here is just a bunch of absolute nonsense I\u0026rsquo;ve written to dogfood the plugin itself. It includes every sensible typographic element I could think of, like bold text, unordered lists, ordered lists, code blocks, block quotes, and even italics.\nIt\u0026rsquo;s important to cover all of these use cases for a few reasons:\nWe want everything to look good out of the box. Really just the first reason, that\u0026rsquo;s the whole point of the plugin. Here\u0026rsquo;s a third pretend reason though a list with three items looks more realistic than a list with two items. Now we\u0026rsquo;re going to try out another header style.\nTypography should be easy # So that\u0026rsquo;s a header for you — with any luck if we\u0026rsquo;ve done our job correctly that will look pretty reasonable.\nSomething a wise person once told me about typography is:\nTypography is pretty important if you don\u0026rsquo;t want your stuff to look like trash. Make it good then it won\u0026rsquo;t be bad.\nIt\u0026rsquo;s probably important that images look okay here by default as well:\nContrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.\nNow I\u0026rsquo;m going to show you an example of an unordered list to make sure that looks good, too:\nSo here is the first item in this list. In this example we\u0026rsquo;re keeping the items short. Later, we\u0026rsquo;ll use longer, more complex list items. And that\u0026rsquo;s the end of this section.\nWhat if we stack headings? # We should make sure that looks good, too. # Sometimes you have headings directly underneath each other. In those cases you often have to undo the top margin on the second heading because it usually looks better for the headings to be closer together than a paragraph followed by a heading should be.\nWhen a heading comes after a paragraph … # When a heading comes after a paragraph, we need a bit more space, like I already mentioned above. Now let\u0026rsquo;s see what a more complex list would look like.\nI often do this thing where list items have headings.\nFor some reason I think this looks cool which is unfortunate because it\u0026rsquo;s pretty annoying to get the styles right.\nI often have two or three paragraphs in these list items, too, so the hard part is getting the spacing between the paragraphs, list item heading, and separate list items to all make sense. Pretty tough honestly, you could make a strong argument that you just shouldn\u0026rsquo;t write this way.\nSince this is a list, I need at least two items.\nI explained what I\u0026rsquo;m doing already in the previous list item, but a list wouldn\u0026rsquo;t be a list if it only had one item, and we really want this to look realistic. That\u0026rsquo;s why I\u0026rsquo;ve added this second list item so I actually have something to look at when writing the styles.\nIt\u0026rsquo;s not a bad idea to add a third item either.\nI think it probably would\u0026rsquo;ve been fine to just use two items but three is definitely not worse, and since I seem to be having no trouble making up arbitrary things to type, I might as well include it.\nAfter this sort of list I usually have a closing statement or paragraph, because it kinda looks weird jumping right to a heading.\nCode should look okay by default. # I think most people are going to use highlight.js or Prism or something if they want to style their code blocks but it wouldn\u0026rsquo;t hurt to make them look okay out of the box, even with no syntax highlighting.\nHere\u0026rsquo;s what a default tailwind.config.js file looks like at the time of writing:\nmodule.exports = { purge: [], theme: { extend: {}, }, variants: {}, plugins: [], } Hopefully that looks good enough to you.\nWhat about nested lists? # Nested lists basically always look bad which is why editors like Medium don\u0026rsquo;t even let you do it, but I guess since some of you goofballs are going to do it we have to carry the burden of at least making it work.\nNested lists are rarely a good idea. You might feel like you are being really \u0026ldquo;organized\u0026rdquo; or something but you are just creating a gross shape on the screen that is hard to read. Nested navigation in UIs is a bad idea too, keep things as flat as possible. Nesting tons of folders in your source code is also not helpful. Since we need to have more items, here\u0026rsquo;s another one. I\u0026rsquo;m not sure if we\u0026rsquo;ll bother styling more than two levels deep. Two is already too much, three is guaranteed to be a bad idea. If you nest four levels deep you belong in prison. Two items isn\u0026rsquo;t really a list, three is good though. Again please don\u0026rsquo;t nest lists if you want people to actually read your content. Nobody wants to look at this. I\u0026rsquo;m upset that we even have to bother styling this. The most annoying thing about lists in Markdown is that \u0026lt;li\u0026gt; elements aren\u0026rsquo;t given a child \u0026lt;p\u0026gt; tag unless there are multiple paragraphs in the list item. That means I have to worry about styling that annoying situation too.\nFor example, here\u0026rsquo;s another nested list.\nBut this time with a second paragraph.\nThese list items won\u0026rsquo;t have \u0026lt;p\u0026gt; tags Because they are only one line each But in this second top-level list item, they will.\nThis is especially annoying because of the spacing on this paragraph.\nAs you can see here, because I\u0026rsquo;ve added a second line, this list item now has a \u0026lt;p\u0026gt; tag.\nThis is the second line I\u0026rsquo;m talking about by the way.\nFinally here\u0026rsquo;s another list item so it\u0026rsquo;s more like a list.\nA closing list item, but with no nested list, because why not?\nAnd finally a sentence to close off this section.\nThere are other elements we need to style # I almost forgot to mention links, like this link to the Tailwind CSS website. We almost made them blue but that\u0026rsquo;s so yesterday, so we went with dark gray, feels edgier.\nWe even included table styles, check it out:\nWrestler Origin Finisher Bret \u0026ldquo;The Hitman\u0026rdquo; Hart Calgary, AB Sharpshooter Stone Cold Steve Austin Austin, TX Stone Cold Stunner Randy Savage Sarasota, FL Elbow Drop Vader Boulder, CO Vader Bomb Razor Ramon Chuluota, FL Razor\u0026rsquo;s Edge We also need to make sure inline code looks good, like if I wanted to talk about \u0026lt;span\u0026gt; elements or tell you the good news about @tailwindcss/typography.\nSometimes I even use code in headings # Even though it\u0026rsquo;s probably a bad idea, and historically I\u0026rsquo;ve had a hard time making it look good. This \u0026ldquo;wrap the code blocks in backticks\u0026rdquo; trick works pretty well though really.\nAnother thing I\u0026rsquo;ve done in the past is put a code tag inside of a link, like if I wanted to tell you about the tailwindcss/docs repository. I don\u0026rsquo;t love that there is an underline below the backticks but it is absolutely not worth the madness it would require to avoid it.\nWe haven\u0026rsquo;t used an h4 yet # But now we have. Please don\u0026rsquo;t use h5 or h6 in your content, Medium only supports two heading levels for a reason, you animals. I honestly considered using a before pseudo-element to scream at you if you use an h5 or h6.\nWe don\u0026rsquo;t style them at all out of the box because h4 elements are already so small that they are the same size as the body copy. What are we supposed to do with an h5, make it smaller than the body copy? No thanks.\nWe still need to think about stacked headings though. # Let\u0026rsquo;s make sure we don\u0026rsquo;t screw that up with h4 elements, either. # Phew, with any luck we have styled the headings above this text and they look pretty good.\nLet\u0026rsquo;s add a closing paragraph here so things end with a decently sized block of text. I can\u0026rsquo;t explain why I want things to end that way but I have to assume it\u0026rsquo;s because I think things will look weird or unbalanced if there is a heading too close to the end of the document.\nWhat I\u0026rsquo;ve written here is probably long enough, but adding this final sentence can\u0026rsquo;t hurt.\n","date":"16 April 2024","externalUrl":null,"permalink":"/posts/1rbc/","section":"Posts","summary":"Some title # Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS.","title":"1 Billion Rows Challenge","type":"posts"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/tags/data-engineering/","section":"Tags","summary":"","title":"Data-Engineering","type":"tags"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/tags/duckdb/","section":"Tags","summary":"","title":"Duckdb","type":"tags"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/tags/rust/","section":"Tags","summary":"","title":"Rust","type":"tags"},{"content":"","date":"16 April 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"4 March 2024","externalUrl":null,"permalink":"/notes/","section":"Notes","summary":"","title":"Notes","type":"notes"},{"content":"Workflow orchestrator for Python\nWhat to run Where to run it How to run it When to run it Contract between code, infrastructure, and the triggers\nEvent driven orchestration\n","date":"4 March 2024","externalUrl":null,"permalink":"/notes/python/prefect/","section":"Notes","summary":"Workflow orchestrator for Python","title":"Prefect","type":"notes"},{"content":"","date":"15 April 2023","externalUrl":null,"permalink":"/tags/langchain/","section":"Tags","summary":"","title":"Langchain","type":"tags"},{"content":" See what\u0026rsquo;s possible with Blowfish. This section contains all my current projects.\n","date":"15 April 2023","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"See what\u0026rsquo;s possible with Blowfish.","title":"Projects","type":"projects"},{"content":"","date":"15 April 2023","externalUrl":null,"permalink":"/tags/rag/","section":"Tags","summary":"","title":"Rag","type":"tags"},{"content":"Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS.\nBy default, Tailwind removes all of the default browser styling from paragraphs, headings, lists and more. This ends up being really useful for building application UIs because you spend less time undoing user-agent styles, but when you really are just trying to style some content that came from a rich-text editor in a CMS or a markdown file, it can be surprising and unintuitive.\nWe get lots of complaints about it actually, with people regularly asking us things like:\nWhy is Tailwind removing the default styles on my h1 elements? How do I disable this? What do you mean I lose all the other base styles too? We hear you, but we\u0026rsquo;re not convinced that simply disabling our base styles is what you really want. You don\u0026rsquo;t want to have to remove annoying margins every time you use a p element in a piece of your dashboard UI. And I doubt you really want your blog posts to use the user-agent styles either — you want them to look awesome, not awful.\nThe @tailwindcss/typography plugin is our attempt to give you what you actually want, without any of the downsides of doing something stupid like disabling our base styles.\nIt adds a new prose class that you can slap on any block of vanilla HTML content and turn it into a beautiful, well-formatted document:\n\u0026lt;article class=\u0026#34;prose\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;Garlic bread with cheese: What the science tells us\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; For years parents have espoused the health benefits of eating garlic bread with cheese to their children, with the food earning such an iconic status in our culture that kids will often dress up as warm, cheesy loaf for Halloween. \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases springing up around the country. \u0026lt;/p\u0026gt; \u0026lt;/article\u0026gt; For more information about how to use the plugin and the features it includes, read the documentation.\nWhat to expect from here on out # What follows from here is just a bunch of absolute nonsense I\u0026rsquo;ve written to dogfood the plugin itself. It includes every sensible typographic element I could think of, like bold text, unordered lists, ordered lists, code blocks, block quotes, and even italics.\nIt\u0026rsquo;s important to cover all of these use cases for a few reasons:\nWe want everything to look good out of the box. Really just the first reason, that\u0026rsquo;s the whole point of the plugin. Here\u0026rsquo;s a third pretend reason though a list with three items looks more realistic than a list with two items. Now we\u0026rsquo;re going to try out another header style.\nTypography should be easy # So that\u0026rsquo;s a header for you — with any luck if we\u0026rsquo;ve done our job correctly that will look pretty reasonable.\nSomething a wise person once told me about typography is:\nTypography is pretty important if you don\u0026rsquo;t want your stuff to look like trash. Make it good then it won\u0026rsquo;t be bad.\nIt\u0026rsquo;s probably important that images look okay here by default as well:\nContrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.\nNow I\u0026rsquo;m going to show you an example of an unordered list to make sure that looks good, too:\nSo here is the first item in this list. In this example we\u0026rsquo;re keeping the items short. Later, we\u0026rsquo;ll use longer, more complex list items. And that\u0026rsquo;s the end of this section.\nWhat if we stack headings? # We should make sure that looks good, too. # Sometimes you have headings directly underneath each other. In those cases you often have to undo the top margin on the second heading because it usually looks better for the headings to be closer together than a paragraph followed by a heading should be.\nWhen a heading comes after a paragraph … # When a heading comes after a paragraph, we need a bit more space, like I already mentioned above. Now let\u0026rsquo;s see what a more complex list would look like.\nI often do this thing where list items have headings.\nFor some reason I think this looks cool which is unfortunate because it\u0026rsquo;s pretty annoying to get the styles right.\nI often have two or three paragraphs in these list items, too, so the hard part is getting the spacing between the paragraphs, list item heading, and separate list items to all make sense. Pretty tough honestly, you could make a strong argument that you just shouldn\u0026rsquo;t write this way.\nSince this is a list, I need at least two items.\nI explained what I\u0026rsquo;m doing already in the previous list item, but a list wouldn\u0026rsquo;t be a list if it only had one item, and we really want this to look realistic. That\u0026rsquo;s why I\u0026rsquo;ve added this second list item so I actually have something to look at when writing the styles.\nIt\u0026rsquo;s not a bad idea to add a third item either.\nI think it probably would\u0026rsquo;ve been fine to just use two items but three is definitely not worse, and since I seem to be having no trouble making up arbitrary things to type, I might as well include it.\nAfter this sort of list I usually have a closing statement or paragraph, because it kinda looks weird jumping right to a heading.\nCode should look okay by default. # I think most people are going to use highlight.js or Prism or something if they want to style their code blocks but it wouldn\u0026rsquo;t hurt to make them look okay out of the box, even with no syntax highlighting.\nHere\u0026rsquo;s what a default tailwind.config.js file looks like at the time of writing:\nmodule.exports = { purge: [], theme: { extend: {}, }, variants: {}, plugins: [], } Hopefully that looks good enough to you.\nWhat about nested lists? # Nested lists basically always look bad which is why editors like Medium don\u0026rsquo;t even let you do it, but I guess since some of you goofballs are going to do it we have to carry the burden of at least making it work.\nNested lists are rarely a good idea. You might feel like you are being really \u0026ldquo;organized\u0026rdquo; or something but you are just creating a gross shape on the screen that is hard to read. Nested navigation in UIs is a bad idea too, keep things as flat as possible. Nesting tons of folders in your source code is also not helpful. Since we need to have more items, here\u0026rsquo;s another one. I\u0026rsquo;m not sure if we\u0026rsquo;ll bother styling more than two levels deep. Two is already too much, three is guaranteed to be a bad idea. If you nest four levels deep you belong in prison. Two items isn\u0026rsquo;t really a list, three is good though. Again please don\u0026rsquo;t nest lists if you want people to actually read your content. Nobody wants to look at this. I\u0026rsquo;m upset that we even have to bother styling this. The most annoying thing about lists in Markdown is that \u0026lt;li\u0026gt; elements aren\u0026rsquo;t given a child \u0026lt;p\u0026gt; tag unless there are multiple paragraphs in the list item. That means I have to worry about styling that annoying situation too.\nFor example, here\u0026rsquo;s another nested list.\nBut this time with a second paragraph.\nThese list items won\u0026rsquo;t have \u0026lt;p\u0026gt; tags Because they are only one line each But in this second top-level list item, they will.\nThis is especially annoying because of the spacing on this paragraph.\nAs you can see here, because I\u0026rsquo;ve added a second line, this list item now has a \u0026lt;p\u0026gt; tag.\nThis is the second line I\u0026rsquo;m talking about by the way.\nFinally here\u0026rsquo;s another list item so it\u0026rsquo;s more like a list.\nA closing list item, but with no nested list, because why not?\nAnd finally a sentence to close off this section.\nThere are other elements we need to style # I almost forgot to mention links, like this link to the Tailwind CSS website. We almost made them blue but that\u0026rsquo;s so yesterday, so we went with dark gray, feels edgier.\nWe even included table styles, check it out:\nWrestler Origin Finisher Bret \u0026ldquo;The Hitman\u0026rdquo; Hart Calgary, AB Sharpshooter Stone Cold Steve Austin Austin, TX Stone Cold Stunner Randy Savage Sarasota, FL Elbow Drop Vader Boulder, CO Vader Bomb Razor Ramon Chuluota, FL Razor\u0026rsquo;s Edge We also need to make sure inline code looks good, like if I wanted to talk about \u0026lt;span\u0026gt; elements or tell you the good news about @tailwindcss/typography.\nSometimes I even use code in headings # Even though it\u0026rsquo;s probably a bad idea, and historically I\u0026rsquo;ve had a hard time making it look good. This \u0026ldquo;wrap the code blocks in backticks\u0026rdquo; trick works pretty well though really.\nAnother thing I\u0026rsquo;ve done in the past is put a code tag inside of a link, like if I wanted to tell you about the tailwindcss/docs repository. I don\u0026rsquo;t love that there is an underline below the backticks but it is absolutely not worth the madness it would require to avoid it.\nWe haven\u0026rsquo;t used an h4 yet # But now we have. Please don\u0026rsquo;t use h5 or h6 in your content, Medium only supports two heading levels for a reason, you animals. I honestly considered using a before pseudo-element to scream at you if you use an h5 or h6.\nWe don\u0026rsquo;t style them at all out of the box because h4 elements are already so small that they are the same size as the body copy. What are we supposed to do with an h5, make it smaller than the body copy? No thanks.\nWe still need to think about stacked headings though. # Let\u0026rsquo;s make sure we don\u0026rsquo;t screw that up with h4 elements, either. # Phew, with any luck we have styled the headings above this text and they look pretty good.\nLet\u0026rsquo;s add a closing paragraph here so things end with a decently sized block of text. I can\u0026rsquo;t explain why I want things to end that way but I have to assume it\u0026rsquo;s because I think things will look weird or unbalanced if there is a heading too close to the end of the document.\nWhat I\u0026rsquo;ve written here is probably long enough, but adding this final sentence can\u0026rsquo;t hurt.\n","date":"15 April 2023","externalUrl":null,"permalink":"/posts/rag/","section":"Posts","summary":"Until now, trying to style an article, document, or blog post with Tailwind has been a tedious task that required a keen eye for typography and a lot of complex custom CSS.","title":"RAG","type":"posts"},{"content":"Build a RAG and use all tools and strategies available to improve performances\n","date":"15 April 2023","externalUrl":null,"permalink":"/projects/rag/","section":"Projects","summary":"Build a RAG and use all tools and strategies available to improve performances","title":"RAG","type":"projects"},{"content":"","date":"15 April 2023","externalUrl":null,"permalink":"/tags/vectorstore/","section":"Tags","summary":"","title":"Vectorstore","type":"tags"},{"content":"","date":"15 April 2023","externalUrl":null,"permalink":"/tags/weaviate/","section":"Tags","summary":"","title":"Weaviate","type":"tags"},{"content":"My academic journey started with economics, but curiosity led me to explore the technical side of things.\nI started coding during COVID, and I never stopped since then.\nThis exploration has not only broadened my understanding but also shaped my career path in unexpected ways. Coding has become a significant part of my life, with Python being my go-to language, although I occasionally venture into TypeScript and Rust for specific projects.\nMy professional experience includes working with Docker and Kubernetes, focusing on deploying applications efficiently. Recently, I\u0026rsquo;ve been delving into the potential of Large Language Models (LLM) for extracting data from raw text documents. This work has been both challenging and rewarding, pushing me to continuously learn and adapt. I enjoy the process of exploring new technologies and ideas, always looking for ways to improve and innovate.\nIf you would like a newer unredacted version of my resume or have an interesting project or opportunity you would like to share, please don\u0026rsquo;t hesitate to reach out via email or linkedIn.\nExperience # Company Role Dates Location Iceberg Datalab Data Engineer Nov 2022 - Present Paris CEPREMAP Research Assistant 2021 - 2022 Paris Crayon Software Experts, LLC Senior Technical Support Engineer 2022 - 2023 Dallas, Texas Education # School Degree Dates Location Paris 1 - Panthéon-Sorbonne M2 - Financial Economics 2021 - 2022 Paris PSE - Paris School of Economics M1 - APE 2020 - 2021 Paris Certifications # Certification Provider Year Azure Something Azure 2021 Resume in details # header badge test subheader Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. Another Awesome Header date - present Awesome Subheader With html code Coffee Tea Milk Shortcodes AWESOME With other shortcodes ","date":"11 November 2022","externalUrl":null,"permalink":"/about/","section":"","summary":"My academic journey started with economics, but curiosity led me to explore the technical side of things.","title":"Resume","type":"page"},{"content":"","date":"16 August 2020","externalUrl":null,"permalink":"/tags/docs/","section":"Tags","summary":"","title":"Docs","type":"tags"},{"content":"","date":"16 August 2020","externalUrl":null,"permalink":"/series/documentation/","section":"Series","summary":"","title":"Documentation","type":"series"},{"content":"","date":"16 August 2020","externalUrl":null,"permalink":"/tags/installation/","section":"Tags","summary":"","title":"Installation","type":"tags"},{"content":"Simply follow the standard Hugo Quick Start procedure to get up and running quickly.\nDetailed installation instructions can be found below. Instructions for updating the theme are also available.\nInstallation # These instructions will get you up and running using Hugo and Blowfish from a completely blank state. Most of the dependencies mentioned in this guide can be installed using the package manager of choice for your platform.\nInstall Hugo # If you haven\u0026rsquo;t used Hugo before, you will need to install it onto your local machine. You can check if it\u0026rsquo;s already installed by running the command hugo version.\nMake sure you are using Hugo version 0.87.0 or later as the theme takes advantage of some of the latest Hugo features. You can find detailed installation instructions for your platform in the Hugo docs.\nBlowfish Tools (recommended) # We just launched a new CLI tool to help you get started with Blowfish. It will create a new Hugo project, install the theme and set up the theme configuration files for you. It\u0026rsquo;s still in beta so please report any issues you find.\nInstall the CLI tool globally using npm (or other package manager):\nnpx blowfish-tools or\nnpm i -g blowfish-tools Then run the command blowfish-tools to start an interactive run which will guide you through creation and configuration use-cases.\nblowfish-tools You can also run the command blowfish-tools new to create a new Hugo project and install the theme in one go. Check the CLI help for more information.\nblowfish-tools new mynewsite Here\u0026rsquo;s a quick video of how fast it is to get started with Blowfish using the CLI tool:\n","date":"16 August 2020","externalUrl":null,"permalink":"/posts/installation/","section":"Posts","summary":"Simply follow the standard Hugo Quick Start procedure to get up and running quickly.","title":"Installation","type":"posts"},{"content":"","date":"16 August 2020","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"My projects\nIn addition to all the default Hugo shortcodes, Blowfish adds a few extras for additional functionality.\nAlert # alert outputs its contents as a stylised message box within your article. It\u0026rsquo;s useful for drawing attention to important information that you don\u0026rsquo;t want the reader to miss.\nParameter Description icon Optional. the icon to display on the left side.\nDefault: exclaimation triangle icon (Check out the icon shortcode for more details on using icons.) iconColor Optional. the color for the icon in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . cardColor Optional. the color for the card background in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . textColor Optional. the color for the text in basic CSS style.\nCan be either hex values (#FFFFFF) or color names (white)\nBy default chosen based on the current color theme . The input is written in Markdown so you can format it however you please.\nExample 1: No params\n{{\u0026lt; alert \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive! Example 2: Unnamed param\n{{\u0026lt; alert \u0026#34;twitter\u0026#34; \u0026gt;}} Don\u0026#39;t forget to [follow me](https://twitter.com/nunocoracao) on Twitter. {{\u0026lt; /alert \u0026gt;}} Don\u0026rsquo;t forget to follow me on Twitter. Example 3: Named params\n{{\u0026lt; alert icon=\u0026#34;fire\u0026#34; cardColor=\u0026#34;#e63946\u0026#34; iconColor=\u0026#34;#1d3557\u0026#34; textColor=\u0026#34;#f1faee\u0026#34; \u0026gt;}} This is an error! {{\u0026lt; /alert \u0026gt;}} This is an error! Article # Article will embed a single article into a markdown file. The link to the file should be the .RelPermalink of the file to be embedded. Note that the shortcode will not display anything if it\u0026rsquo;s referencing it\u0026rsquo;s parent. Note: if you are running your website in a subfolder like Blowfish (i.e. /blowfish/) please include that path in the link.\nParameter Description link Required. the .RelPermalink to the target article. Example:\n{{\u0026lt; article link=\u0026#34;/docs/welcome/\u0026#34; \u0026gt;}} Badge # badge outputs a styled badge component which is useful for displaying metadata.\nExample:\n{{\u0026lt; badge \u0026gt;}} New article! {{\u0026lt; /badge \u0026gt;}} New article! Button # button outputs a styled button component which can be used to highlight a primary action. It has two optional variables href and target which can be used to specify the URL and target of the link.\nExample:\n{{\u0026lt; button href=\u0026#34;#button\u0026#34; target=\u0026#34;_self\u0026#34; \u0026gt;}} Call to action {{\u0026lt; /button \u0026gt;}} Call to action Carousel # carousel is used to showcase multiple images in an interactive and visually appealing way. This allows a user to slide through multiple images while only taking up the vertical space of a single one. All images are displayed using the full width of the parent component and using one of the predefined aspect ratios of 16:9, 21:9 or 32:9.\nParameter Description images Required. A regex string to match image names or URLs. aspectRatio Optional. The aspect ratio for the carousel. Either 16-9, 21-9 or 32-9. It is set to 16-9 by default. interval Optional. The interval for the auto-scrooling, specified in milliseconds. Defaults to 2000 (2s) Example 1: 16:9 aspect ratio and verbose list of images\n{{\u0026lt; carousel images=\u0026#34;{https://cdn.pixabay.com/photo/2016/12/11/12/02/mountains-1899264_960_720.jpg, gallery/03.jpg, gallery/01.jpg, gallery/02.jpg, gallery/04.jpg}\u0026#34; \u0026gt;}} Previous Nextsads Example 2: 21:9 aspect ratio and regex-ed list of images\n{{\u0026lt; carousel images=\u0026#34;gallery/*\u0026#34; aspectRatio=\u0026#34;21-9\u0026#34; interval=\u0026#34;2500\u0026#34; \u0026gt;}} Previous Nextsads Chart # chart uses the Chart.js library to embed charts into articles using simple structured data. It supports a number of different chart styles and everything can be configured from within the shortcode. Simply provide the chart parameters between the shortcode tags and Chart.js will do the rest.\nRefer to the official Chart.js docs for details on syntax and supported chart types.\nExample:\n{{\u0026lt; chart \u0026gt;}} type: \u0026#39;bar\u0026#39;, data: { labels: [\u0026#39;Tomato\u0026#39;, \u0026#39;Blueberry\u0026#39;, \u0026#39;Banana\u0026#39;, \u0026#39;Lime\u0026#39;, \u0026#39;Orange\u0026#39;], datasets: [{ label: \u0026#39;# of votes\u0026#39;, data: [12, 19, 3, 5, 3], }] } {{\u0026lt; /chart \u0026gt;}} Figure # Blowfish includes a figure shortcode for adding images to content. The shortcode replaces the base Hugo functionality in order to provide additional performance benefits.\nWhen a provided image is a page resource, it will be optimised using Hugo Pipes and scaled in order to provide images appropriate to different device resolutions. If a static asset or URL to an external image is provided, it will be included as-is without any image processing by Hugo.\nThe figure shortcode accepts six parameters:\nParameter Description src Required. The local path/filename or URL of the image. When providing a path and filename, the theme will attempt to locate the image using the following lookup order: Firstly, as a page resource bundled with the page; then an asset in the assets/ directory; then finally, a static image in the static/ directory. alt Alternative text description for the image. caption Markdown for the image caption, which will be displayed below the image. class Additional CSS classes to apply to the image. href URL that the image should be linked to. target The target attribute for the href URL. nozoom nozoom=true disables the image \u0026ldquo;zoom\u0026rdquo; functionality. This is most useful in combination with a href link. default Special parameter to revert to default Hugo figure behaviour. Simply provide default=true and then use normal Hugo shortcode syntax. Blowfish also supports automatic conversion of images included using standard Markdown syntax. Simply use the following format and the theme will handle the rest:\n![Alt text](image.jpg \u0026#34;Image caption\u0026#34;) Example:\n{{\u0026lt; figure src=\u0026#34;abstract.jpg\u0026#34; alt=\u0026#34;Abstract purple artwork\u0026#34; caption=\u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34; \u0026gt;}} \u0026lt;!-- OR --\u0026gt; ![Abstract purple artwork](abstract.jpg \u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34;) Photo by Jr Korpa on Unsplash Gallery # gallery allows you to showcase multiple images at once, in a responsive manner with more varied and interesting layouts.\nIn order to add images to the gallery, use img tags for each image and add class=\u0026quot;grid-wXX\u0026quot; in order for the gallery to be able to identify the column width for each image. The widths available by default start at 10% and go all the way to 100% in 5% increments. For example, to set the width to 65%, set the class to grid-w65. Additionally, widths for 33% and 66% are also available in order to build galleries with 3 cols. You can also leverage tailwind\u0026rsquo;s responsive indicators to have a reponsive grid.\nExample 1: normal gallery\n{{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} Example 2: responsive gallery\n{{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w50 md:grid-w33 xl:grid-w25\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} GitHub Card # github allows you to quickly link a github repository, all while showing and updating in realtime stats about it, such as the number of stars and forks it has.\nParameter Description repo [String] github repo in the format of username/repo Example 1:\n{{\u0026lt; github repo=\u0026#34;nunocoracao/blowfish\u0026#34; \u0026gt;}} nunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo JavaScript 1046 311 GitLab Card # gitlab allows you to quickly link a GitLab Project (GitLab\u0026rsquo;s jargon for repo). It displays realtime stats about it, such as the number of stars and forks it has. Unlike github it can\u0026rsquo;t display the main programming language of a project. Finally, custom GitLab instance URL can be provided, as long as the api/v4/projects/ endpoint is available, making this shortcode compatible with most self-hosted / enterprise deployments.\nParameter Description projectID [String] gitlab numeric ProjectID baseURL [String] optional gitlab instance URL, default is https://gitlab.com/ Example 1:\n{{\u0026lt; gitlab projectID=\u0026#34;278964\u0026#34; \u0026gt;}} GitLab.org / GitLab GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider. 5014 9663 Icon # icon outputs an SVG icon and takes the icon name as its only parameter. The icon is scaled to match the current text size.\nExample:\n{{\u0026lt; icon \u0026#34;github\u0026#34; \u0026gt;}} Output: Custom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the shortcode by using the SVG filename without the .svg extension.\nKaTeX # The katex shortcode can be used to add mathematical expressions to article content using the KaTeX package. Refer to the online reference of supported TeX functions for the available syntax.\nTo include mathematical expressions in an article, simply place the shortcode anywhere with the content. It only needs to be included once per article and KaTeX will automatically render any markup on that page. Both inline and block notation are supported.\nInline notation can be generated by wrapping the expression in \\\\( and \\\\) delimiters. Alternatively, block notation can be generated using $$ delimiters.\nExample:\n{{\u0026lt; katex \u0026gt;}} \\\\(f(a,b,c) = (a^2+b^2+c^2)^3\\\\) \\(f(a,b,c) = (a^2+b^2+c^2)^3\\)\nKeyword # The keyword component can be used to visually highlight certain important words or phrases, e.g. professional skills etc. The keywordList shortcode can be used to group together multiple keyword items. Each item can have the following properties.\nParameter Description icon Optional icon to be used in the keyword The input is written in Markdown so you can format it however you please.\nExample1 :\n{{\u0026lt; keyword \u0026gt;}} Super skill {{\u0026lt; /keyword \u0026gt;}} Standalone skill Example2 :\n{{\u0026lt; keywordList \u0026gt;}} {{\u0026lt; keyword icon=\u0026#34;github\u0026#34; \u0026gt;}} Lorem ipsum dolor. {{\u0026lt; /keyword \u0026gt;}} {{\u0026lt; keyword icon=\u0026#34;code\u0026#34; \u0026gt;}} **Important** skill {{\u0026lt; /keyword \u0026gt;}} {{\u0026lt; /keywordList \u0026gt;}} {{\u0026lt; keyword \u0026gt;}} *Standalone* skill {{\u0026lt; /keyword \u0026gt;}} Lorem ipsum dolor Important skill Standalone skill Lead # lead is used to bring emphasis to the start of an article. It can be used to style an introduction, or to call out an important piece of information. Simply wrap any Markdown content in the lead shortcode.\nExample:\n{{\u0026lt; lead \u0026gt;}} When life gives you lemons, make lemonade. {{\u0026lt; /lead \u0026gt;}} When life gives you lemons, make lemonade. List # List will display a list of recent articles. This shortcode requires a limit value to constraint the list. Additionally, it supports a where and a value in order to filter articles by their parameters. Note that this shortcode will not display its parent page but it will count for the limit value.\nParameter Description limit Required. the number of recent articles to display. title Optional title for the list, default is Recent cardView Optional card view enabled for the list, default is false where The variable to be used for the query of articles e.g. Type value The value that will need to match the parameter defined in where for the query of articles e.g. for where == Type a valid value could be sample The where and value values are used in the following query where .Site.RegularPages $where $value in the code of the shortcode. Check Hugo docs to learn more about which parameters are available to use. Example #1:\n{{\u0026lt; list limit=2 \u0026gt;}} Recent 1 Billion Rows Challenge 16 April 2024\u0026middot;1762 words\u0026middot;9 mins Data-Engineering Rust Python Duckdb Prefect 4 March 2024\u0026middot;29 words\u0026middot;1 min Example #2:\n{{\u0026lt; list title=\u0026#34;Samples\u0026#34; cardView=true limit=5 where=\u0026#34;Type\u0026#34; value=\u0026#34;sample\u0026#34; \u0026gt;}} Samples LTR/RTL # ltr and rtl allows you to mix your contents. Many RTL language users want to include parts of the content in LTR. Using this shortcode will let you do so, and by leveraging % as the outer-most dilemeter in the shortcode Hugo shortcodes, any markdown inside will be rendered normally.\nExample:\n- This is an markdown list. - Its per default a LTR direction {{% rtl %}} - هذه القائمة باللغة العربية - من اليمين الى اليسار {{% /rtl %}} This is an markdown list. Its per default a LTR direction هذه القائمة باللغة العربية من اليمين الى اليسار Markdown Importer # This shortcode allows you to import markdown files from external sources. This is useful for including content from other repositories or websites without having to copy and paste the content.\nParameter Description url Required URL to an externally hosted markdown file. Example:\n{{\u0026lt; mdimporter url=\u0026#34;https://raw.githubusercontent.com/nunocoracao/nunocoracao/master/README.md\u0026#34; \u0026gt;}} Hi there 👋 # 🐳 working as a Staff Product Manager @ Docker 🐡 Creator and maintainer of Blowfish @ Blowfish page 🚀 Personal blog - n9o.xyz 📚 mentoring @ mentorcruise Mermaid # mermaid allows you to draw detailed diagrams and visualisations using text. It uses Mermaid under the hood and supports a wide variety of diagrams, charts and other output formats.\nSimply write your Mermaid syntax within the mermaid shortcode and let the plugin do the rest.\nRefer to the official Mermaid docs for details on syntax and supported diagram types.\nExample:\n{{\u0026lt; mermaid \u0026gt;}} graph LR; A[Lemons]--\u0026gt;B[Lemonade]; B--\u0026gt;C[Profit] {{\u0026lt; /mermaid \u0026gt;}} graph LR; A[Lemons]--\u003eB[Lemonade]; B--\u003eC[Profit] Swatches # swatches outputs a set of up to three different colors to showcase color elements like a color palette. This shortcode takes the HEX codes of each color and creates the visual elements for each.\nExample\n{{\u0026lt; swatches \u0026#34;#64748b\u0026#34; \u0026#34;#3b82f6\u0026#34; \u0026#34;#06b6d4\u0026#34; \u0026gt;}} Output Timeline # The timeline creates a visual timeline that can be used in different use-cases, e.g. professional experience, a project\u0026rsquo;s achievements, etc. The timeline shortcode relies on the timelineItem sub-shortcode to define each item within the main timeline. Each item can have the following properties.\nParameter Description icon the icon to be used in the timeline visuals. header header for each entry badge text to place within the top right badge subheader entry\u0026rsquo;s subheader Example:\n{{\u0026lt; timeline \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;github\u0026#34; header=\u0026#34;header\u0026#34; badge=\u0026#34;badge test\u0026#34; subheader=\u0026#34;subheader\u0026#34; \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;code\u0026#34; header=\u0026#34;Another Awesome Header\u0026#34; badge=\u0026#34;date - present\u0026#34; subheader=\u0026#34;Awesome Subheader\u0026#34; \u0026gt;}} With html code \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tea\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Milk\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;star\u0026#34; header=\u0026#34;Shortcodes\u0026#34; badge=\u0026#34;AWESOME\u0026#34; \u0026gt;}} With other shortcodes {{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; /timeline \u0026gt;}} header badge test subheader Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Nam ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Nam sollicitudin est sed dui interdum rhoncus. Another Awesome Header date - present Awesome Subheader With html code Coffee Tea Milk Shortcodes AWESOME With other shortcodes TypeIt # TypeIt is the most versatile JavaScript tool for creating typewriter effects on the planet. With a straightforward configuration, it allows you to type single or multiple strings that break lines, delete \u0026amp; replace each other, and it even handles strings that contain complex HTML.\nBlowfish implements a sub-set of TypeIt features using a shortcode. Write your text within the typeit shortcode and use the following parameters to configure the behavior you want.\nParameter Description tag [String] html tag that will be used to render the strings. classList [String] List of css classes to apply to the html element. initialString [String] Initial string that will appear written and will be replaced. speed [number] Typing speed, measured in milliseconds between each step. lifeLike [boolean] Makes the typing pace irregular, as if a real person is doing it. startDelay [number] The amount of time before the plugin begins typing after being initialized. breakLines [boolean] Whether multiple strings are printed on top of each other (true), or if they\u0026rsquo;re deleted and replaced by each other (false). waitUntilVisible [boolean] Determines if the instance will begin when loaded or only when the target element becomes visible in the viewport. The default is true loop [boolean] Whether your strings will continuously loop after completing Example 1:\n{{\u0026lt; typeit \u0026gt;}} Lorem ipsum dolor sit amet {{\u0026lt; /typeit \u0026gt;}} Example 2:\n{{\u0026lt; typeit tag=h1 lifeLike=true \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. {{\u0026lt; /typeit \u0026gt;}} Example 3:\n{{\u0026lt; typeit tag=h3 speed=50 breakLines=false loop=true \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. {{\u0026lt; /typeit \u0026gt;}} Youtube Lite # A shortcut to embed youtube videos using the lite-youtube-embed library. This library is a lightweight alternative to the standard youtube embeds, and it\u0026rsquo;s designed to be faster and more efficient.\nParameter Description id [String] Youtube video id to embed. label [String] Label for the video params [String] Extras parameters for video playing Example 1:\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; \u0026gt;}} Example 2:\nYou can use all of Youtube\u0026rsquo;s player parameters for the params variable, as demonstrated below:\nThis video will start after 130 seconds (2m10)\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; params=\u0026#34;start=130\u0026#34; \u0026gt;}} This video will not have UI controls, will start playing at 130 seconds and will stop 10 seconds later.\nTo concatenate multiple options as shown below, you need to add the \u0026amp; character between them.\n{{\u0026lt; youtubeLite id=\u0026#34;SgXhGb-7QbU\u0026#34; label=\u0026#34;Blowfish-tools demo\u0026#34; params=\u0026#34;start=130\u0026amp;end=10\u0026amp;controls=0\u0026#34; \u0026gt;}} More informations can be found on the youtubeLite GitHub repo and Youtube\u0026rsquo;s player parameters page.\n","date":"11 August 2020","externalUrl":null,"permalink":"/projects/another-project/","section":"Projects","summary":"My projects","title":"Another Project","type":"projects"},{"content":"","date":"11 August 2020","externalUrl":null,"permalink":"/tags/icon/","section":"Tags","summary":"","title":"Icon","type":"tags"},{"content":"","date":"11 August 2020","externalUrl":null,"permalink":"/tags/lead/","section":"Tags","summary":"","title":"Lead","type":"tags"},{"content":"","date":"11 August 2020","externalUrl":null,"permalink":"/tags/mermaid/","section":"Tags","summary":"","title":"Mermaid","type":"tags"},{"content":"","date":"11 August 2020","externalUrl":null,"permalink":"/tags/projects/","section":"Tags","summary":"","title":"Projects","type":"tags"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]